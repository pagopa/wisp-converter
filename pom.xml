<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.2.3</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>it.gov.pagopa</groupId>
    <artifactId>wisp-converter</artifactId>
    <version>1.0.6-4-release-v1.0.7</version>
    <name>pagoPA WISP Converter</name>
    <description>A service that permits to handle nodoInviaRPT and nodoInviaCarrelloRPT request from WISP, converting them in NMU payments.</description>

    <properties>
        <java.version>17</java.version>
        <mapstruct.version>1.5.5.Final</mapstruct.version>
        <springdoc-openapi-starter-webmvc-ui>2.4.0</springdoc-openapi-starter-webmvc-ui>
        <java-ecs-logging.version>1.6.0</java-ecs-logging.version>
        <aspectjrt.version>1.9.20.1</aspectjrt.version>
        <azure-sdk-bom.version>1.2.21</azure-sdk-bom.version>
        <azure-messaging.version>5.18.2</azure-messaging.version>
        <azure-blob.version>1.19.2</azure-blob.version>
        <netty.version>4.1.101.Final</netty.version>
        <cosmos-data-version>5.10.0</cosmos-data-version>
        <spring-cloud.version>2023.0.0</spring-cloud.version>
        <jsr305.version>3.0.2</jsr305.version>
        <openfeign-version>4.1.0</openfeign-version>
        <azure-messaging-servicebus-version>7.16.0</azure-messaging-servicebus-version>
        <azure-identity-version>1.8.0</azure-identity-version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web-services</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aspects</artifactId>
        </dependency>

        <dependency>
            <groupId>com.microsoft.azure</groupId>
            <artifactId>applicationinsights-core</artifactId>
            <version>3.6.1</version>
        </dependency>


        <!-- Spring utils-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Azure Service bus -->
        <dependency>
            <groupId>com.azure</groupId>
            <artifactId>azure-messaging-servicebus</artifactId>
            <version>${azure-messaging-servicebus-version}</version>
        </dependency>

        <!-- Data persistence -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>
        <dependency>
            <groupId>com.azure</groupId>
            <artifactId>azure-spring-data-cosmos</artifactId>
            <version>${cosmos-data-version}</version>
        </dependency>
        <dependency>
            <groupId>com.azure</groupId>
            <artifactId>azure-messaging-eventhubs</artifactId>
            <version>${azure-messaging.version}</version>
        </dependency>
        <dependency>
            <groupId>com.azure</groupId>
            <artifactId>azure-messaging-eventhubs-checkpointstore-blob</artifactId>
            <version>${azure-blob.version}</version>
        </dependency>

        <!-- Swagger/OpenAPI -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>${springdoc-openapi-starter-webmvc-ui}</version>
        </dependency>

        <!-- utilities -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${mapstruct.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
            <version>${jsr305.version}</version>
        </dependency>
        <dependency>
            <groupId>wsdl4j</groupId>
            <artifactId>wsdl4j</artifactId>
        </dependency>

        <dependency>
            <groupId>org.openapitools</groupId>
            <artifactId>jackson-databind-nullable</artifactId>
            <version>0.2.6</version>
        </dependency>

        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.11.0</version>
        </dependency>


        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>co.elastic.logging</groupId>
            <artifactId>logback-ecs-encoder</artifactId>
            <version>${java-ecs-logging.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jaxb</groupId>
            <artifactId>jaxb-runtime</artifactId>
            <version>4.0.5</version>
        </dependency>

    </dependencies>

    <profiles>
        <!--
        This particular configuration is needed in order to connect from local to Redis Cache in DEV environment,
        if you have a Mac M1 processor. If this cause problems on your PC, please comment it.
        -->
        <profile>
            <id>local</id>
            <activation>
                <os>
                    <family>mac</family>
                    <arch>aarch64</arch>
                </os>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>io.netty</groupId>
                    <artifactId>netty-resolver-dns-native-macos</artifactId>
                    <classifier>osx-aarch_64</classifier>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>no-sonar</id>
            <properties>
                <sonar.skip>true</sonar.skip>
            </properties>
        </profile>
    </profiles>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>
                <configuration>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${mapstruct.version}</version>
                        </path>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok-mapstruct-binding</artifactId>
                            <version>0.2.0</version>
                        </path>
                    </annotationProcessorPaths>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <useIncrementalCompilation>false</useIncrementalCompilation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <nonFilteredFileExtensions>
                        <nonFilteredFileExtension>woff</nonFilteredFileExtension>
                        <nonFilteredFileExtension>woff2</nonFilteredFileExtension>
                    </nonFilteredFileExtensions>
                </configuration>
            </plugin>

            <!-- Plugin required to build java classes from XSD using CXF -->
            <plugin>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-codegen-plugin</artifactId>
                <version>4.0.4</version>
                <executions>
                    <execution>
                        <id>wsdl-to-java</id>
                        <phase>generate-sources</phase>
                        <configuration>
                            <sourceRoot>${project.build.directory}/generated-sources</sourceRoot>
                            <wsdlOptions>
                                <wsdlOption>
                                    <wsdl>${basedir}/src/main/resources/wsdl/NodoPerPa.wsdl</wsdl>
                                    <wsdlLocation>classpath:wsdl/NodoPerPa.wsdl</wsdlLocation>
                                    <packagenames>
                                        <packagename>http://ws.pagamenti.telematici.gov/ppthead=gov.telematici.pagamenti.ws.nodoperpa.ppthead</packagename>
                                        <packagename>http://ws.pagamenti.telematici.gov/=gov.telematici.pagamenti.ws.nodoperpa</packagename>
                                        <packagename>http://www.digitpa.gov.it/schemas/2011/Pagamenti/=gov.telematici.pagamenti.ws.nodoperpa.pagamenti</packagename>
                                    </packagenames>
                                </wsdlOption>
                                <wsdlOption>
                                    <wsdl>${basedir}/src/main/resources/wsdl/PaPerNodo.wsdl</wsdl>
                                    <wsdlLocation>classpath:wsdl/PaPerNodo.wsdl</wsdlLocation>
                                    <packagenames>
                                        <packagename>http://ws.pagamenti.telematici.gov/ppthead=gov.telematici.pagamenti.ws.papernodo.ppthead</packagename>
                                        <packagename>http://ws.pagamenti.telematici.gov/=gov.telematici.pagamenti.ws.papernodo</packagename>
                                        <packagename>http://www.digitpa.gov.it/schemas/2011/Pagamenti/=gov.telematici.pagamenti.ws.papernodo.pagamenti</packagename>
                                    </packagenames>
                                </wsdlOption>
                                <wsdlOption>
                                    <wsdl>${basedir}/src/main/resources/wsdl/paForNode.wsdl</wsdl>
                                    <wsdlLocation>classpath:wsdl/paForNode.wsdl</wsdlLocation>
                                    <packagenames>
                                        <packagename>http://pagopa-api.pagopa.gov.it/paForNode=gov.telematici.pagamenti.ws.pafornode</packagename>
                                        <packagename>http://pagopa-api.pagopa.gov.it/pa/paForNode.xsd=gov.telematici.pagamenti.ws.pafornode</packagename>
                                        <packagename>http://ws.pagamenti.telematici.gov/=gov.telematici.pagamenti.ws.pafornode.common</packagename>
                                    </packagenames>
                                </wsdlOption>
                                <!--                                <wsdlOption>-->
                                <!--                                    <wsdl>${basedir}/src/main/resources/wsdl/PaPerNodo.wsdl</wsdl>-->
                                <!--                                    <wsdlLocation>classpath:wsdl/PaPerNodo.wsdl</wsdlLocation>-->
                                <!--                                </wsdlOption>-->
                                <!--                                <wsdlOption>-->
                                <!--                                    <wsdl>${basedir}/src/main/resources/wsdl/paForNode.wsdl</wsdl>-->
                                <!--                                    <wsdlLocation>classpath:wsdl/paForNode.wsdl</wsdlLocation>-->
                                <!--                                </wsdlOption>-->
                            </wsdlOptions>
                        </configuration>
                        <goals>
                            <goal>wsdl2java</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-xjc-plugin</artifactId>
                <version>4.0.1</version>
                <executions>
                    <execution>
                        <id>xsd-to-java</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>xsdtojava</goal>
                        </goals>
                        <configuration>
                            <sourceRoot>${project.build.directory}/generated-sources</sourceRoot>
                            <xsdOptions>
                                <xsdOption>
                                    <xsd>${project.basedir}/src/main/resources/xsd/PagInf_RPT_RT_6_2_0.xsd</xsd>
                                </xsdOption>
                            </xsdOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- JaCoCo plugin -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.7</version>
                <configuration>
                    <excludes>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Sonar scanner plugin -->
            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>3.11.0.3922</version>
                <executions>
                    <execution>
                        <phase>verify</phase>
                        <goals>
                            <goal>sonar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Client generation with OpenAPI Generator -->
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <version>7.4.0</version>
                <executions>
                    <execution>
                        <id>apiconfig-cache</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/openapi-client/apiconfig-cache/openapi_cache.json</inputSpec>
                            <generatorName>java</generatorName>
                            <modelNameSuffix>Dto</modelNameSuffix>
                            <generateApiTests>false</generateApiTests>
                            <generateModelTests>false</generateModelTests>
                            <library>resttemplate</library>
                            <configOptions>
                                <basePackage>it.gov.pagopa.gen.wispconverter.client.cache</basePackage>
                                <modelPackage>it.gov.pagopa.gen.wispconverter.client.cache.model</modelPackage>
                                <apiPackage>it.gov.pagopa.gen.wispconverter.client.cache.api</apiPackage>
                                <invokerPackage>it.gov.pagopa.gen.wispconverter.client.cache.invoker</invokerPackage>
                                <dateLibrary>java8</dateLibrary>
                            </configOptions>
                        </configuration>
                    </execution>
                    <execution>
                        <id>gpd</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/openapi-client/gpd/openapi.json</inputSpec>
                            <generatorName>java</generatorName>
                            <modelNameSuffix>Dto</modelNameSuffix>
                            <generateApiTests>false</generateApiTests>
                            <generateModelTests>false</generateModelTests>
                            <library>resttemplate</library>
                            <configOptions>
                                <basePackage>it.gov.pagopa.gen.wispconverter.client.gpd</basePackage>
                                <modelPackage>it.gov.pagopa.gen.wispconverter.client.gpd.model</modelPackage>
                                <apiPackage>it.gov.pagopa.gen.wispconverter.client.gpd.api</apiPackage>
                                <invokerPackage>it.gov.pagopa.gen.wispconverter.client.gpd.invoker</invokerPackage>
                                <dateLibrary>java8</dateLibrary>
                            </configOptions>
                        </configuration>
                    </execution>
                    <execution>
                        <id>iuv-generator</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/openapi-client/iuv-generator/openapi.json</inputSpec>
                            <generatorName>java</generatorName>
                            <modelNameSuffix>Dto</modelNameSuffix>
                            <generateApiTests>false</generateApiTests>
                            <generateModelTests>false</generateModelTests>
                            <library>resttemplate</library>
                            <configOptions>
                                <basePackage>it.gov.pagopa.gen.wispconverter.client.iuvgenerator</basePackage>
                                <modelPackage>it.gov.pagopa.gen.wispconverter.client.iuvgenerator.model</modelPackage>
                                <apiPackage>it.gov.pagopa.gen.wispconverter.client.iuvgenerator.api</apiPackage>
                                <invokerPackage>it.gov.pagopa.gen.wispconverter.client.iuvgenerator.invoker</invokerPackage>
                                <dateLibrary>java8</dateLibrary>
                            </configOptions>
                        </configuration>
                    </execution>
                    <execution>
                        <id>checkout</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/openapi-client/checkout/openapi.json</inputSpec>
                            <generatorName>java</generatorName>
                            <modelNameSuffix>Dto</modelNameSuffix>
                            <generateApiTests>false</generateApiTests>
                            <generateModelTests>false</generateModelTests>
                            <library>resttemplate</library>
                            <configOptions>
                                <basePackage>it.gov.pagopa.gen.wispconverter.client.checkout</basePackage>
                                <modelPackage>it.gov.pagopa.gen.wispconverter.client.checkout.model</modelPackage>
                                <apiPackage>it.gov.pagopa.gen.wispconverter.client.checkout.api</apiPackage>
                                <invokerPackage>it.gov.pagopa.gen.wispconverter.client.checkout.invoker</invokerPackage>
                                <dateLibrary>java8</dateLibrary>
                            </configOptions>
                        </configuration>
                    </execution>
                    <execution>
                        <id>decoupler-caching</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/openapi-client/decoupler-caching/openapi.json</inputSpec>
                            <generatorName>java</generatorName>
                            <modelNameSuffix>Dto</modelNameSuffix>
                            <generateApiTests>false</generateApiTests>
                            <generateModelTests>false</generateModelTests>
                            <library>resttemplate</library>
                            <configOptions>
                                <basePackage>it.gov.pagopa.gen.wispconverter.client.decouplercaching</basePackage>
                                <modelPackage>it.gov.pagopa.gen.wispconverter.client.decouplercaching.model</modelPackage>
                                <apiPackage>it.gov.pagopa.gen.wispconverter.client.decouplercaching.api</apiPackage>
                                <invokerPackage>it.gov.pagopa.gen.wispconverter.client.decouplercaching.invoker
                                </invokerPackage>
                                <dateLibrary>java8</dateLibrary>
                            </configOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>
    </build>

</project>
